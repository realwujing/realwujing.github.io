<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>vfs_write (4,630,804,022 samples, 17.94%)</title><rect x="948.5" y="149" width="211.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="951.47" y="159.5" >vfs_write</text>
</g>
<g >
<title>__fsnotify_parent (78,319,062 samples, 0.30%)</title><rect x="362.5" y="133" width="3.5" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="365.45" y="143.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1,398,817,444 samples, 5.42%)</title><rect x="443.6" y="85" width="63.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="446.60" y="95.5" >copy_pa..</text>
</g>
<g >
<title>write (11,609,445,315 samples, 44.97%)</title><rect x="646.2" y="213" width="530.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="649.17" y="223.5" >write</text>
</g>
<g >
<title>el0_svc_naked (10,099,948,724 samples, 39.13%)</title><rect x="183.3" y="197" width="461.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="186.28" y="207.5" >el0_svc_naked</text>
</g>
<g >
<title>timespec64_trunc (26,140,350 samples, 0.10%)</title><rect x="594.7" y="37" width="1.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="597.74" y="47.5" ></text>
</g>
<g >
<title>__vfs_write (52,301,068 samples, 0.20%)</title><rect x="943.7" y="149" width="2.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="946.69" y="159.5" ></text>
</g>
<g >
<title>__fsnotify_parent (52,266,801 samples, 0.20%)</title><rect x="619.8" y="101" width="2.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="622.83" y="111.5" ></text>
</g>
<g >
<title>__se_sys_write (78,451,097 samples, 0.30%)</title><rect x="764.5" y="197" width="3.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="767.47" y="207.5" ></text>
</g>
<g >
<title>current_time (392,120,599 samples, 1.52%)</title><rect x="1130.3" y="69" width="17.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1133.28" y="79.5" ></text>
</g>
<g >
<title>__se_sys_write (5,362,379,334 samples, 20.77%)</title><rect x="915.0" y="181" width="245.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="918.03" y="191.5" >__se_sys_write</text>
</g>
<g >
<title>__fget_light (470,164,645 samples, 1.82%)</title><rect x="325.4" y="133" width="21.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="328.44" y="143.5" >_..</text>
</g>
<g >
<title>copyout (26,151,879 samples, 0.10%)</title><rect x="507.5" y="85" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="510.54" y="95.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (392,171,466 samples, 1.52%)</title><rect x="576.8" y="37" width="17.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="579.81" y="47.5" ></text>
</g>
<g >
<title>main (25,526,097,410 samples, 98.89%)</title><rect x="10.0" y="229" width="1166.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >main</text>
</g>
<g >
<title>rw_verify_area (445,617,105 samples, 1.73%)</title><rect x="609.1" y="133" width="20.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="612.08" y="143.5" ></text>
</g>
<g >
<title>kill_fasync (52,264,142 samples, 0.20%)</title><rect x="508.7" y="85" width="2.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="511.74" y="95.5" ></text>
</g>
<g >
<title>__arch_copy_to_user (1,059,311,838 samples, 4.10%)</title><rect x="453.2" y="69" width="48.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="456.16" y="79.5" >__ar..</text>
</g>
<g >
<title>fsnotify (261,398,438 samples, 1.01%)</title><rect x="597.1" y="133" width="12.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="600.13" y="143.5" ></text>
</g>
<g >
<title>__vfs_write (4,081,775,213 samples, 15.81%)</title><rect x="962.8" y="133" width="186.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="965.81" y="143.5" >__vfs_write</text>
</g>
<g >
<title>new_sync_write (4,003,356,323 samples, 15.51%)</title><rect x="965.2" y="117" width="183.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="968.20" y="127.5" >new_sync_write</text>
</g>
<g >
<title>rw_verify_area (52,292,723 samples, 0.20%)</title><rect x="1157.8" y="133" width="2.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1160.77" y="143.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (313,688,848 samples, 1.22%)</title><rect x="1133.9" y="53" width="14.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1136.87" y="63.5" ></text>
</g>
<g >
<title>pipe_read (4,195,212,005 samples, 16.25%)</title><rect x="405.4" y="101" width="191.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="408.35" y="111.5" >pipe_read</text>
</g>
<g >
<title>__fget_light (417,869,932 samples, 1.62%)</title><rect x="924.6" y="133" width="19.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="927.59" y="143.5" ></text>
</g>
<g >
<title>el0_svc_naked (8,943,224,615 samples, 34.65%)</title><rect x="768.1" y="197" width="408.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="771.06" y="207.5" >el0_svc_naked</text>
</g>
<g >
<title>read@plt (104,064,907 samples, 0.40%)</title><rect x="1182.9" y="229" width="4.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1185.85" y="239.5" ></text>
</g>
<g >
<title>__fdget_pos (548,617,813 samples, 2.13%)</title><rect x="321.9" y="149" width="25.0" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="324.86" y="159.5" >_..</text>
</g>
<g >
<title>iov_iter_init (104,550,692 samples, 0.41%)</title><rect x="984.5" y="101" width="4.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="987.48" y="111.5" ></text>
</g>
<g >
<title>fsnotify (183,000,063 samples, 0.71%)</title><rect x="1149.4" y="133" width="8.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1152.40" y="143.5" ></text>
</g>
<g >
<title>pipe_write (3,450,923,137 samples, 13.37%)</title><rect x="990.5" y="101" width="157.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="993.45" y="111.5" >pipe_write</text>
</g>
<g >
<title>pipe (25,813,118,936 samples, 100.00%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >pipe</text>
</g>
<g >
<title>iov_iter_init (130,736,818 samples, 0.51%)</title><rect x="398.2" y="101" width="6.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="401.18" y="111.5" ></text>
</g>
<g >
<title>current_time (418,311,816 samples, 1.62%)</title><rect x="576.8" y="53" width="19.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="579.81" y="63.5" ></text>
</g>
<g >
<title>anon_pipe_buf_release (104,559,529 samples, 0.41%)</title><rect x="438.8" y="85" width="4.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="441.82" y="95.5" ></text>
</g>
<g >
<title>ksys_write (5,336,229,732 samples, 20.67%)</title><rect x="916.2" y="165" width="244.0" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="919.22" y="175.5" >ksys_write</text>
</g>
<g >
<title>ret_fast_syscall (26,144,568 samples, 0.10%)</title><rect x="645.0" y="197" width="1.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="647.98" y="207.5" ></text>
</g>
<g >
<title>fsnotify (158,111,254 samples, 0.61%)</title><rect x="622.2" y="101" width="7.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="625.22" y="111.5" ></text>
</g>
<g >
<title>fsnotify (52,296,218 samples, 0.20%)</title><rect x="346.9" y="149" width="2.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="349.94" y="159.5" ></text>
</g>
<g >
<title>new_sync_read (4,950,773,581 samples, 19.18%)</title><rect x="370.8" y="117" width="226.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="373.81" y="127.5" >new_sync_read</text>
</g>
<g >
<title>context_tracking_user_exit (26,154,301 samples, 0.10%)</title><rect x="182.1" y="197" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="185.08" y="207.5" ></text>
</g>
<g >
<title>read (130,679,603 samples, 0.51%)</title><rect x="1176.9" y="229" width="6.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1179.88" y="239.5" ></text>
</g>
<g >
<title>write (52,277,016 samples, 0.20%)</title><rect x="1187.6" y="229" width="2.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1190.61" y="239.5" ></text>
</g>
<g >
<title>atime_needs_update (549,043,574 samples, 2.13%)</title><rect x="572.0" y="69" width="25.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="575.03" y="79.5" >a..</text>
</g>
<g >
<title>__vfs_read (5,055,348,895 samples, 19.58%)</title><rect x="366.0" y="133" width="231.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="369.03" y="143.5" >__vfs_read</text>
</g>
<g >
<title>read (13,289,207,929 samples, 51.48%)</title><rect x="38.7" y="213" width="607.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="41.68" y="223.5" >read</text>
</g>
<g >
<title>generic_pipe_buf_confirm (52,291,338 samples, 0.20%)</title><rect x="395.8" y="101" width="2.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="398.79" y="111.5" ></text>
</g>
<g >
<title>pipe_write (26,136,717 samples, 0.10%)</title><rect x="1148.2" y="117" width="1.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1151.21" y="127.5" ></text>
</g>
<g >
<title>__fsnotify_parent (52,284,832 samples, 0.20%)</title><rect x="960.4" y="133" width="2.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="963.42" y="143.5" ></text>
</g>
<g >
<title>__se_sys_read (6,911,744,115 samples, 26.78%)</title><rect x="313.5" y="181" width="316.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="316.49" y="191.5" >__se_sys_read</text>
</g>
<g >
<title>all (25,813,119,564 samples, 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>pipe_update_file_time (444,420,041 samples, 1.72%)</title><rect x="1127.9" y="85" width="20.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1130.89" y="95.5" ></text>
</g>
<g >
<title>copy_page_to_iter (78,438,188 samples, 0.30%)</title><rect x="392.2" y="101" width="3.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="395.21" y="111.5" ></text>
</g>
<g >
<title>_start (25,813,118,936 samples, 100.00%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >_start</text>
</g>
<g >
<title>security_file_permission (367,177,270 samples, 1.42%)</title><rect x="612.7" y="117" width="16.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="615.67" y="127.5" ></text>
</g>
<g >
<title>ksys_write (26,152,872 samples, 0.10%)</title><rect x="1175.7" y="181" width="1.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1178.68" y="191.5" ></text>
</g>
<g >
<title>context_tracking_user_exit (339,704,272 samples, 1.32%)</title><rect x="629.5" y="181" width="15.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="632.45" y="191.5" ></text>
</g>
<g >
<title>mutex_unlock (811,260,477 samples, 3.14%)</title><rect x="1090.8" y="85" width="37.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1093.81" y="95.5" >mut..</text>
</g>
<g >
<title>__se_sys_read (78,389,260 samples, 0.30%)</title><rect x="178.5" y="197" width="3.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="181.50" y="207.5" ></text>
</g>
<g >
<title>context_tracking_user_exit (339,638,463 samples, 1.32%)</title><rect x="1160.2" y="181" width="15.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1163.16" y="191.5" ></text>
</g>
<g >
<title>ksys_read (6,859,471,897 samples, 26.57%)</title><rect x="315.9" y="165" width="313.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="318.88" y="175.5" >ksys_read</text>
</g>
<g >
<title>mutex_unlock (783,366,039 samples, 3.03%)</title><rect x="533.8" y="85" width="35.8" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="536.83" y="95.5" >mut..</text>
</g>
<g >
<title>mutex_lock (366,027,886 samples, 1.42%)</title><rect x="1074.1" y="85" width="16.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1077.07" y="95.5" ></text>
</g>
<g >
<title>mutex_lock (496,625,465 samples, 1.92%)</title><rect x="511.1" y="85" width="22.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="514.13" y="95.5" >m..</text>
</g>
<g >
<title>mutex_unlock (26,147,698 samples, 0.10%)</title><rect x="989.3" y="101" width="1.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="992.26" y="111.5" ></text>
</g>
<g >
<title>copyout (130,400,592 samples, 0.51%)</title><rect x="501.6" y="69" width="5.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="504.58" y="79.5" ></text>
</g>
<g >
<title>__arch_copy_from_user (992,940,444 samples, 3.85%)</title><rect x="1026.3" y="69" width="45.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1029.30" y="79.5" >__ar..</text>
</g>
<g >
<title>vfs_read (6,127,844,115 samples, 23.74%)</title><rect x="349.3" y="149" width="280.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="352.33" y="159.5" >vfs_read</text>
</g>
<g >
<title>touch_atime (601,335,920 samples, 2.33%)</title><rect x="569.6" y="85" width="27.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="572.64" y="95.5" >t..</text>
</g>
<g >
<title>anon_pipe_buf_release (52,287,678 samples, 0.20%)</title><rect x="389.8" y="101" width="2.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="392.82" y="111.5" ></text>
</g>
<g >
<title>copy_page_from_iter (1,437,391,387 samples, 5.57%)</title><rect x="1006.0" y="85" width="65.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1008.99" y="95.5" >copy_pa..</text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (26,141,401 samples, 0.10%)</title><rect x="595.9" y="53" width="1.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="598.94" y="63.5" ></text>
</g>
<g >
<title>__fdget_pos (470,148,844 samples, 1.82%)</title><rect x="922.2" y="149" width="21.5" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="925.20" y="159.5" >_..</text>
</g>
<g >
<title>kill_fasync (52,059,318 samples, 0.20%)</title><rect x="1071.7" y="85" width="2.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1074.69" y="95.5" ></text>
</g>
<g >
<title>mutex_lock (26,138,652 samples, 0.10%)</title><rect x="404.2" y="101" width="1.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="407.16" y="111.5" ></text>
</g>
<g >
<title>rw_verify_area (52,236,427 samples, 0.20%)</title><rect x="946.1" y="149" width="2.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="949.08" y="159.5" ></text>
</g>
</g>
</svg>
